import java.util.ArrayList;
import java.util.List;

public class FibonacciSequence {


    /*

    Java/.NET/Python
Each new term in the Fibonacci sequence is generated by adding the previous two terms.
By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025,
121393,


By considering the terms in the Fibonacci sequence whose values do not exceed four million,
find the sum of the even-valued terms.

Answer:


[1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229, 832040, 1346269, 2178309, 3524578, 5702887]
The Fibonacci sequence whose values do not exceed four million
The sum of the even value terms: 4613732


     */

    public static void valueTerms(){

        int temp = 0;

        ArrayList<Integer> num = new ArrayList<>(100);

        num.add(1);
        num.add(2);

        int i = 1;
        int sum =0;
        while(num.get(i) < 4000000) {             // The value is always the index before

            temp = num.get(i-1)+num.get(i);
            num.add(temp);

            if (num.get(i) % 2 == 0) {

                sum = sum + num.get(i);

            }

            i=i+1;

        }

        System.out.print("\n");
        System.out.print(num);
        System.out.print("\n");
        System.out.print("The Fibonacci sequence whose values do not exceed four million");
        System.out.print("\n");
        System.out.print("The sum of the even value terms: "+sum);

    }




    public static void main(String[] args) {

        valueTerms();

    }



}
